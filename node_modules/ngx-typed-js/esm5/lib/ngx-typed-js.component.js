import { __decorate, __metadata } from "tslib";
import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import Typed from 'typed.js';
var NgxTypedJsComponent = /** @class */ (function () {
    function NgxTypedJsComponent() {
        this.completed = new EventEmitter();
        this.preStringTyped = new EventEmitter();
        this.stringTyped = new EventEmitter();
        this.lastStringBackspaced = new EventEmitter();
        this.typingPaused = new EventEmitter();
        this.typingResumed = new EventEmitter();
        this.reset = new EventEmitter();
        this.stopped = new EventEmitter();
        this.started = new EventEmitter();
        this.destroyed = new EventEmitter();
    }
    NgxTypedJsComponent.prototype.ngOnInit = function () {
        this.typed = new Typed(this.content.nativeElement.querySelector('.typing'), this.options);
    };
    NgxTypedJsComponent.prototype.ngAfterViewInit = function () {
        if (this.showCursor !== false) {
            this.updateCursorStyle();
        }
    };
    NgxTypedJsComponent.prototype.toggle = function () {
        this.typed.toggle();
    };
    NgxTypedJsComponent.prototype.stop = function () {
        this.typed.stop();
    };
    NgxTypedJsComponent.prototype.start = function () {
        this.typed.start();
    };
    NgxTypedJsComponent.prototype.destroy = function () {
        this.typed.destroy();
    };
    NgxTypedJsComponent.prototype.doReset = function (restart) {
        this.typed.reset(restart);
    };
    Object.defineProperty(NgxTypedJsComponent.prototype, "options", {
        get: function () {
            var emit = function (emitter) { return function () { return emitter.emit(); }; };
            var emitIndex = function (emitter) { return function (index) { return emitter.emit(index); }; };
            var opts = {
                strings: this.strings,
                stringsElement: this.stringsElement,
                typeSpeed: this.typeSpeed,
                startDelay: this.startDelay,
                backSpeed: this.backSpeed,
                smartBackspace: this.smartBackspace,
                shuffle: this.shuffle,
                backDelay: this.backDelay,
                fadeOut: this.fadeOut,
                fadeOutClass: this.fadeOutClass,
                fadeOutDelay: this.fadeOutDelay,
                loop: this.loop,
                loopCount: this.loopCount,
                showCursor: this.showCursor,
                autoInsertCss: this.autoInsertCss,
                attr: this.attr,
                bindInputFocusEvents: this.bindInputFocusEvents,
                contentType: this.contentType,
                onComplete: emit(this.completed),
                preStringTyped: emitIndex(this.preStringTyped),
                onStringTyped: emitIndex(this.stringTyped),
                onLastStringBackspaced: emit(this.lastStringBackspaced),
                onTypingPaused: emitIndex(this.typingPaused),
                onTypingResumed: emitIndex(this.typingResumed),
                onReset: emit(this.reset),
                onStop: emitIndex(this.stopped),
                onStart: emitIndex(this.started),
                onDestroy: emit(this.destroyed),
            };
            Object.keys(opts).forEach(function (key) {
                if (opts[key] === undefined) {
                    delete opts[key];
                }
            });
            return opts;
        },
        enumerable: true,
        configurable: true
    });
    NgxTypedJsComponent.prototype.updateCursorStyle = function () {
        var textElementStyle = getComputedStyle(this.content.nativeElement.querySelector('.typing'));
        var cursorElementStyle = this.content.nativeElement.querySelector('.typed-cursor').style;
        cursorElementStyle.fontSize = textElementStyle.fontSize;
        cursorElementStyle.color = this.cursorColor || textElementStyle.color;
    };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NgxTypedJsComponent.prototype, "cursorColor", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], NgxTypedJsComponent.prototype, "strings", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NgxTypedJsComponent.prototype, "stringsElement", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], NgxTypedJsComponent.prototype, "typeSpeed", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], NgxTypedJsComponent.prototype, "startDelay", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], NgxTypedJsComponent.prototype, "backSpeed", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], NgxTypedJsComponent.prototype, "smartBackspace", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], NgxTypedJsComponent.prototype, "shuffle", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], NgxTypedJsComponent.prototype, "backDelay", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], NgxTypedJsComponent.prototype, "fadeOut", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NgxTypedJsComponent.prototype, "fadeOutClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], NgxTypedJsComponent.prototype, "fadeOutDelay", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], NgxTypedJsComponent.prototype, "loop", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], NgxTypedJsComponent.prototype, "loopCount", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], NgxTypedJsComponent.prototype, "showCursor", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NgxTypedJsComponent.prototype, "cursorChar", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], NgxTypedJsComponent.prototype, "autoInsertCss", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NgxTypedJsComponent.prototype, "attr", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], NgxTypedJsComponent.prototype, "bindInputFocusEvents", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NgxTypedJsComponent.prototype, "contentType", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], NgxTypedJsComponent.prototype, "completed", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], NgxTypedJsComponent.prototype, "preStringTyped", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], NgxTypedJsComponent.prototype, "stringTyped", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], NgxTypedJsComponent.prototype, "lastStringBackspaced", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], NgxTypedJsComponent.prototype, "typingPaused", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], NgxTypedJsComponent.prototype, "typingResumed", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], NgxTypedJsComponent.prototype, "reset", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], NgxTypedJsComponent.prototype, "stopped", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], NgxTypedJsComponent.prototype, "started", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], NgxTypedJsComponent.prototype, "destroyed", void 0);
    __decorate([
        ViewChild('wrapper', { static: true }),
        __metadata("design:type", Object)
    ], NgxTypedJsComponent.prototype, "content", void 0);
    NgxTypedJsComponent = __decorate([
        Component({
            selector: 'ngx-typed-js',
            template: "<div #wrapper>\n  <ng-content></ng-content>\n</div>\n",
            styles: [":host>>>.typing{display:inline}"]
        })
    ], NgxTypedJsComponent);
    return NgxTypedJsComponent;
}());
export { NgxTypedJsComponent };
//# sourceMappingURL=data:application/json;base64,